# rocky9.yaml
arch: "x86_64"
images:
  # Fallback to the latest release image.
  # Hint: run `limactl prune` to invalidate the cache
  - location: "https://dl.rockylinux.org/pub/rocky/9/images/x86_64/Rocky-9-GenericCloud.latest.x86_64.qcow2"
    arch: "x86_64"
  - location: "https://dl.rockylinux.org/pub/rocky/9/images/aarch64/Rocky-9-GenericCloud.latest.aarch64.qcow2"
    arch: "aarch64"

cpus: 8
memory: "12GiB"
disk: "100GiB"

## Issue the ansible playbook ran into errors when it hit the apple Mac mounts
# it also shouldn't matter for this
#mounts:
#  - location: "~"
#  - location: "/tmp/lima"
#    writable: true
      
portForwards:
  - guestIP: "192.168.105.2"
    guestPort: 80
    hostPort: 80
  - guestIP: "192.168.105.2"
    guestPort: 443
    hostPort: 443
  - guestIP: "192.168.105.2"
    guestPort: 6443
    hostPort: 6443
  - guestIP: "192.168.105.2"
    guestPort: 8472
    hostPort: 8472
## TODO add rancher port ranges

containerd:
  system: false
  user: false

provision:
  - mode: system
    script: |
      #!/bin/bash
      # Update and install cloud-init
      dnf update -y
      dnf install -y cloud-init
  - mode: system
    script: |
      #!/bin/bash
      cat <<EOF > /etc/cloud/cloud.cfg.d/99_custom.cfg
      #cloud-config
      package_update: true
      package_upgrade: true

      users:
        - default
        - name: admin
          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          shell: /bin/bash
          passwd: $6$z7Wk2suUk1bmSL.k$InPsLIcb0q6avAgxvH3qXyc3oqZBZ771UID4R/yUZA8VHo0Mm7/5hiRuzdJBjJjpvKenwh5CTN3fGVw94GfzO.
          lock_passwd: false
      ssh_pwauth: True

      packages:
        - git
        - ansible-core
      write_files:
        - path: /etc/ansible/ansible.cfg
          content: |
            [defaults]
            roles_path = /etc/ansible/roles
            playbook_dir = /etc/ansible/playbooks
        - path: /etc/ansible/playbooks/rke2-install-local.yml
          content: |
            ---
            - name: Install RKE2 Server
              hosts: localhost
              roles:
                - role: rke2
        - path: /etc/ansible/inventories/local.yml
          content: |
          ---
          rke2_cluster:
            children:
              rke2_servers:
                hosts:
                  localhost:
        - path: /var/lib/rancher/rke2/server/manifests/post-deploy-manifests/cert-manager.yaml
          content: |
            ---
            apiVersion: helm.cattle.io/v1
            kind: HelmChart
            metadata:
              name: cert-manager
              namespace: kube-system
            spec:
              chart: cert-manager
              repo: https://charts.jetstack.io
              targetNamespace: cert-manager
              createNamepace: true
              version: v1.17.0
              bootstrap: true
              valuesContent: |-
                # Helm chart values which make cert-manager comply with CIS, BSI and NSA
                # security benchmarks and other best practices for deploying cert-manager in
                # production.
                crds:
                  enabled: true
                global:
                  priorityClassName: system-cluster-critical
                replicaCount: 2
                podDisruptionBudget:
                  enabled: true
                  minAvailable: 1
                automountServiceAccountToken: true
                serviceAccount:
                  automountServiceAccountToken: true
                volumes:
                - name: serviceaccount-token
                  projected:
                    defaultMode: 0444
                    sources:
                    - serviceAccountToken:
                        expirationSeconds: 3607
                        path: token
                    - configMap:
                        name: kube-root-ca.crt
                        items:
                        - key: ca.crt
                          path: ca.crt
                    - downwardAPI:
                        items:
                        - path: namespace
                          fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                volumeMounts:
                - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                  name: serviceaccount-token
                  readOnly: true
                webhook:
                  replicaCount: 3
                  podDisruptionBudget:
                    enabled: true
                    minAvailable: 1
                  automountServiceAccountToken: true
                  serviceAccount:
                    automountServiceAccountToken: true
                  volumes:
                  - name: serviceaccount-token
                    projected:
                      defaultMode: 0444
                      sources:
                      - serviceAccountToken:
                          expirationSeconds: 3607
                          path: token
                      - configMap:
                          name: kube-root-ca.crt
                          items:
                          - key: ca.crt
                            path: ca.crt
                      - downwardAPI:
                          items:
                          - path: namespace
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                  volumeMounts:
                  - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                    name: serviceaccount-token
                    readOnly: true
                cainjector:
                  extraArgs:
                  - --namespace=cert-manager
                  - --enable-certificates-data-source=false
                  replicaCount: 2
                  podDisruptionBudget:
                    enabled: true
                    minAvailable: 1
                  automountServiceAccountToken: true
                  serviceAccount:
                    automountServiceAccountToken: true
                  volumes:
                  - name: serviceaccount-token
                    projected:
                      defaultMode: 0444
                      sources:
                      - serviceAccountToken:
                          expirationSeconds: 3607
                          path: token
                      - configMap:
                          name: kube-root-ca.crt
                          items:
                          - key: ca.crt
                            path: ca.crt
                      - downwardAPI:
                          items:
                          - path: namespace
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                  volumeMounts:
                  - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                    name: serviceaccount-token
                    readOnly: true
                startupapicheck:
                  automountServiceAccountToken: true
                  serviceAccount:
                    automountServiceAccountToken: true
                  volumes:
                  - name: serviceaccount-token
                    projected:
                      defaultMode: 0444
                      sources:
                      - serviceAccountToken:
                          expirationSeconds: 3607
                          path: token
                      - configMap:
                          name: kube-root-ca.crt
                          items:
                          - key: ca.crt
                            path: ca.crt
                      - downwardAPI:
                          items:
                          - path: namespace
                            fieldRef:
                              apiVersion: v1
                              fieldPath: metadata.namespace
                  volumeMounts:
                  - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                    name: serviceaccount-token
                    readOnly: true
        - path: /var/lib/rancher/rke2/server/manifests/post-deploy-manifests/rancher.yaml
          content: |
            ---
            apiVersion: helm.cattle.io/v1
            kind: HelmChart
            metadata:
              name: rancher
              namespace: kube-system
            spec:
              chart: rancher
              repo: https://releases.rancher.com/server-charts/stable
              targetNamespace: cattle-system
              createNamepace: true
              version: v2.11.2
              bootstrap: true
              valuesContent: |-
                hostname: 
                bootstrapPassword: admin
                replicas: 1
                ## STIG Configs
                auditLog:
                  level: 2
            
      ansible:
        install_method: distro
        package_name: ansible-core
        pull:
          url: "https://github.com/rancherfederal/rke2-ansible.git"
          playbook_name: /etc/ansible/playbooks/rke2-install-local.yml
      EOF
